import React, { useState } from 'react';
import {
  Button,
  DialogActions,
  DialogContent,
  DialogTitle,
  TextField,
  Typography
} from '@mui/material';
import ProcessInstanceService from '../../services/ProcessInstanceService';

interface StartProcessDialogProps {
  processName: string;
  onClose: () => void;
  entityId?: number;
  entityType?: string;
}

const StartProcessDialog: React.FC<StartProcessDialogProps> = ({
  processName,
  onClose,
  entityId,
  entityType
}) => {
  const [initiatedBy, setInitiatedBy] = useState('');
  const [error, setError] = useState('');

  const handleStart = () => {
    if (!initiatedBy.trim()) {
      setError('User ID is required');
      return;
    }

    const processVariables: Record<string, any> = {};

    // If entity information is provided, include it in process variables
    if (entityId && entityType) {
      processVariables[`${entityType.toLowerCase()}Id`] = entityId;
      processVariables.entityType = entityType;
    }

    ProcessInstanceService.startProcess(processName, {
      initiatedBy,
      processVariables
    })
    .then(() => {
      onClose();
    })
    .catch((err) => {
      setError(err.message || 'Failed to start process');
    });
  };

  return (
    <>
      <DialogTitle>Start New {processName} Process</DialogTitle>
      <DialogContent>
        {entityId && entityType && (
          <Typography variant="body2" color="text.secondary" sx={{ "{{" }}  mb: 2, p: 1, bgcolor: 'action.hover', borderRadius: 1  {{ "}}" }}>
            This process will be linked to <strong>{entityType} #{entityId}</strong>
          </Typography>
        )}

        <TextField
          label="Initiated By (User ID)"
          placeholder="Enter your user ID (e.g., admin, user1)"
          value={initiatedBy}
          onChange={(e) => setInitiatedBy(e.target.value)}
          fullWidth
          required
          margin="normal"
          autoFocus
          error={!!error && !initiatedBy}
          helperText={!!error && !initiatedBy ? 'User ID is required' : 'Enter the ID of the user starting this process'}
        />

        {error && (
          <Typography color="error" variant="body2" sx={{ "{{" }}  mt: 1  {{ "}}" }}>
            {error}
          </Typography>
        )}
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose}>Cancel</Button>
        <Button variant="contained" color="primary" onClick={handleStart}>
          Start Process
        </Button>
      </DialogActions>
    </>
  );
};

export default StartProcessDialog;
