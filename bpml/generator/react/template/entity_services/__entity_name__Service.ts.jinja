import axios from 'axios';
import { {{ entity_name }} } from '../types/types';

const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8080/api';

class {{ entity_name }}Service {
  getAll{{ entity_name }}() {
    return axios.get<{{ entity_name }}[]>(API_BASE_URL + `/{{ entity_name_dash }}/all`)
      .then(response => response.data)
      .catch(error => {
        console.error('Error fetching {{ entity_name }} list:', error);
        throw error;
      });
  }

  get{{ entity_name }}ById(id: number) {
    return axios.get<{{ entity_name }}>(API_BASE_URL + `/{{ entity_name_dash }}/${id}`)
      .then(response => response.data)
      .catch(error => {
        console.error(`Error fetching {{ entity_name }} with id ${id}:`, error);
        throw error;
      });
  }

  create{{ entity_name }}({{ entity_name_lower }}: {{ entity_name }}) {
    return axios.post<{{ entity_name }}>(API_BASE_URL + `/{{ entity_name_dash }}/create`, {{ entity_name_lower }}, {
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.data)
    .catch(error => {
      console.error('Error creating {{ entity_name }}:', error);
      throw error;
    });
  }

  update{{ entity_name }}({{ entity_name_lower }}: {{ entity_name }}) {
    return axios.put<{{ entity_name }}>(
      API_BASE_URL + `/{{ entity_name_dash }}/update/${ {{entity_name_lower}}.id}`,
      {{ entity_name_lower }},
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    )
    .then(response => response.data)
    .catch(error => {
      console.error('Error updating {{ entity_name }}:', error);
      throw error;
    });
  }

  delete{{ entity_name }}(id: number) {
    return axios.delete(API_BASE_URL + `/{{ entity_name_dash }}/delete/${id}`)
      .then(response => response.data)
      .catch(error => {
        console.error(`Error deleting {{ entity_name }} with id ${id}:`, error);
        throw error;
      });
  }
}

export default new {{ entity_name }}Service();
