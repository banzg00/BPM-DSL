package {{ group_name }}.{{ app_name_lower }}.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

/**
 * Stores process definitions and metadata
 */
@Entity
@Table(name = "process_definition")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ProcessDefinition {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "process_name", nullable = false, unique = true)
    private String processName;

    @Column(name = "version")
    private String version;

    @Column(name = "description")
    private String description;

    @Column(name = "definition_json", columnDefinition = "TEXT", nullable = false)
    private String definitionJson; // Complete JSON representation of states, transitions, roles, steps

    @Column(name = "initial_state", nullable = false)
    private String initialState;

    @Column(name = "created_at", nullable = false)
    private LocalDateTime createdAt;

    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    @PrePersist
    protected void onCreate() {
        if (createdAt == null) {
            createdAt = LocalDateTime.now();
        }
        updatedAt = LocalDateTime.now();
    }

    @PreUpdate
    protected void onUpdate() {
        updatedAt = LocalDateTime.now();
    }
}
