package {{ group_name }}.{{ app_name_lower }}.process.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

/**
 * Represents a runtime instance of a process
 */
@Entity
@Table(name = "process_instance")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ProcessInstance {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "process_name", nullable = false)
    private String processName;

    @Column(name = "current_state", nullable = false)
    private String currentState;

    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false)
    private ProcessStatus status;

    @Column(name = "initiated_by")
    private String initiatedBy;

    @Column(name = "process_variables", columnDefinition = "TEXT")
    private String processVariables; // JSON string for flexible storage

    @Column(name = "started_at", nullable = false)
    private LocalDateTime startedAt;

    @Column(name = "completed_at")
    private LocalDateTime completedAt;

    @Column(name = "terminated_reason")
    private String terminatedReason;

    @PrePersist
    protected void onCreate() {
        if (startedAt == null) {
            startedAt = LocalDateTime.now();
        }
        if (status == null) {
            status = ProcessStatus.RUNNING;
        }
    }

    public enum ProcessStatus {
        RUNNING,
        COMPLETED,
        TERMINATED,
        ERROR
    }
}
