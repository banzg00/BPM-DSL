# Application Configuration
spring.application.name={{ app_name }}
server.port=8080
server.servlet.context-path=/api

# H2 Database Configuration (Development)
spring.datasource.url=jdbc:h2:mem:{{ app_name_lower }}db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (http://localhost:8080/api/h2-console)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true

# PostgreSQL Configuration (Production - uncomment when needed)
# spring.datasource.url=jdbc:postgresql://localhost:5432/{{ app_name_lower }}
# spring.datasource.username=${DB_USERNAME:postgres}
# spring.datasource.password=${DB_PASSWORD:postgres}
# spring.datasource.driverClassName=org.postgresql.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging
logging.level.root=INFO
logging.level.{{ group_name }}.{{ app_name_lower }}=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# CORS Configuration (configured in code)
# No CORS settings needed here as we handle it in CorsConfig
